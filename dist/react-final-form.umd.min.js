!(function(t, e) {
  'object' == typeof exports && 'undefined' != typeof module
    ? e(exports, require('react'), require('prop-types'), require('final-form'))
    : 'function' == typeof define && define.amd
      ? define(['exports', 'react', 'prop-types', 'final-form'], e)
      : e((t['react-final-form'] = {}), t.React, t.PropTypes, t.FinalForm)
})(this, function(t, e, n, r) {
  'use strict'
  function i(t, e, n) {
    return t
      ? !e ||
          n.some(function(n) {
            return t[n] !== e[n]
          })
      : !!e
  }
  n = n && n.hasOwnProperty('default') ? n.default : n
  var o =
      'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
        ? function(t) {
            return typeof t
          }
        : function(t) {
            return t &&
              'function' == typeof Symbol &&
              t.constructor === Symbol &&
              t !== Symbol.prototype
              ? 'symbol'
              : typeof t
          },
    a = function(t, e) {
      if (!(t instanceof e))
        throw new TypeError('Cannot call a class as a function')
    },
    s = (function() {
      function t(t, e) {
        for (var n = 0; n < e.length; n++) {
          var r = e[n]
          ;(r.enumerable = r.enumerable || !1),
            (r.configurable = !0),
            'value' in r && (r.writable = !0),
            Object.defineProperty(t, r.key, r)
        }
      }
      return function(e, n, r) {
        return n && t(e.prototype, n), r && t(e, r), e
      }
    })(),
    u =
      Object.assign ||
      function(t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e]
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r])
        }
        return t
      },
    c = function(t, e) {
      if ('function' != typeof e && null !== e)
        throw new TypeError(
          'Super expression must either be null or a function, not ' + typeof e
        )
      ;(t.prototype = Object.create(e && e.prototype, {
        constructor: {
          value: t,
          enumerable: !1,
          writable: !0,
          configurable: !0
        }
      })),
        e &&
          (Object.setPrototypeOf
            ? Object.setPrototypeOf(t, e)
            : (t.__proto__ = e))
    },
    l = function(t, e) {
      var n = {}
      for (var r in t)
        e.indexOf(r) >= 0 ||
          (Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]))
      return n
    },
    f = function(t, e) {
      if (!t)
        throw new ReferenceError(
          "this hasn't been initialised - super() hasn't been called"
        )
      return !e || ('object' != typeof e && 'function' != typeof e) ? t : e
    }
  function p(t, n) {
    var r = t.render,
      i = t.children,
      o = t.component,
      a = l(t, ['render', 'children', 'component'])
    return o
      ? e.createElement(o, u({}, a, { children: i, render: r }))
      : r ? r(u({}, a, { children: i })) : 'function' != typeof i ? null : i(a)
  }
  var m =
      'undefined' != typeof window &&
      window.navigator &&
      window.navigator.product &&
      'ReactNative' === window.navigator.product,
    h = r.fieldSubscriptionItems.reduce(function(t, e) {
      return (t[e] = !0), t
    }, {}),
    b = (function(t) {
      function n(t, e) {
        a(this, n)
        var r = f(
          this,
          (n.__proto__ || Object.getPrototypeOf(n)).call(this, t, e)
        )
        v.call(r)
        var i = void 0
        return (
          r.context.reactFinalForm &&
            r.subscribe(t, function(t) {
              i ? r.notify(t) : (i = t)
            }),
          (r.state = { state: i }),
          r
        )
      }
      return (
        c(n, t),
        s(n, [
          {
            key: 'componentWillReceiveProps',
            value: function(t) {
              var e = t.name,
                n = t.subscription
              ;(this.props.name !== e ||
                i(this.props.subscription, n, r.fieldSubscriptionItems)) &&
                this.context.reactFinalForm &&
                (this.unsubscribe(), this.subscribe(t, this.notify))
            }
          },
          {
            key: 'componentWillUnmount',
            value: function() {
              this.unsubscribe()
            }
          },
          {
            key: 'render',
            value: function() {
              var t = this.props,
                n = t.allowNull,
                r = t.component,
                i = t.children,
                o = t.format,
                a = (t.parse, t.isEqual, t.name),
                s = (t.subscription, t.validate, t.validateFields, t.value),
                c = l(t, [
                  'allowNull',
                  'component',
                  'children',
                  'format',
                  'parse',
                  'isEqual',
                  'name',
                  'subscription',
                  'validate',
                  'validateFields',
                  'value'
                ]),
                f = this.state.state || {},
                m = (f.blur, f.change, f.focus, f.value),
                h = (f.name, l(f, ['blur', 'change', 'focus', 'value', 'name']))
              o && (m = o(m, a)), null !== m || n || (m = '')
              var b = u({ name: a, value: m }, this.handlers)
              return (
                'checkbox' === c.type
                  ? void 0 === s
                    ? (b.checked = !!m)
                    : ((b.checked = !(!Array.isArray(m) || !~m.indexOf(s))),
                      (b.value = s))
                  : 'radio' === c.type
                    ? ((b.checked = m === s), (b.value = s))
                    : 'select' === r && c.multiple && (b.value = b.value || []),
                'function' == typeof i
                  ? i(u({ input: b, meta: h }, c))
                  : 'string' == typeof r
                    ? e.createElement(r, u({}, b, { children: i }, c))
                    : p(
                        u(
                          { input: b, meta: h, children: i, component: r },
                          this.fieldActions,
                          c
                        )
                      )
              )
            }
          }
        ]),
        n
      )
    })(e.Component)
  ;(b.contextTypes = { reactFinalForm: n.object }),
    (b.defaultProps = {
      format: function(t, e) {
        return void 0 === t ? '' : t
      },
      parse: function(t, e) {
        return '' === t ? void 0 : t
      }
    })
  var v = function() {
      var t = this
      ;(this.subscribe = function(e, n) {
        var r = e.isEqual,
          i = e.name,
          o = e.subscription,
          a = e.validateFields
        t.unsubscribe = t.context.reactFinalForm.registerField(i, n, o || h, {
          isEqual: r,
          getValidator: function() {
            return t.props.validate
          },
          validateFields: a
        })
      }),
        (this.notify = function(e) {
          return t.setState({ state: e })
        }),
        (this.handlers = {
          onBlur: function(e) {
            t.state.state && t.state.state.blur()
          },
          onChange: function(e) {
            var n = t.props,
              r = n.parse,
              i = n.value,
              o =
                e && e.target
                  ? (function(t, e, n, r) {
                      if (!r && t.nativeEvent && void 0 !== t.nativeEvent.text)
                        return t.nativeEvent.text
                      if (r && t.nativeEvent) return t.nativeEvent.text
                      var i = t.target,
                        o = i.type,
                        a = i.value,
                        s = i.checked
                      switch (o) {
                        case 'checkbox':
                          if (void 0 !== n) {
                            if (s) return Array.isArray(e) ? e.concat(n) : [n]
                            if (!Array.isArray(e)) return e
                            var u = e.indexOf(n)
                            return u < 0
                              ? e
                              : e.slice(0, u).concat(e.slice(u + 1))
                          }
                          return !!s
                        case 'select-multiple':
                          return (function(t) {
                            var e = []
                            if (t)
                              for (var n = 0; n < t.length; n++) {
                                var r = t[n]
                                r.selected && e.push(r.value)
                              }
                            return e
                          })(t.target.options)
                        default:
                          return a
                      }
                    })(e, t.state.state && t.state.state.value, i, m)
                  : e
            t.state.state && t.state.state.change(r ? r(o, t.props.name) : o)
          },
          onFocus: function(e) {
            t.state.state && t.state.state.focus()
          }
        }),
        (this.fieldActions = {
          blur: function() {
            t.context.reactFinalForm &&
              t.context.reactFinalForm.blur(t.props.name)
          },
          change: function(e) {
            t.context.reactFinalForm &&
              t.context.reactFinalForm.change(t.props.name, e)
          },
          focus: function() {
            t.context.reactFinalForm &&
              t.context.reactFinalForm.focus(t.props.name)
          },
          reset: function() {
            t.context.reactFinalForm &&
              t.context.reactFinalForm.change(
                t.props.name,
                t.state.state.initial
              )
          }
        })
    },
    d = { 'final-form': r.version, 'react-final-form': '3.1.5' },
    y = r.formSubscriptionItems.reduce(function(t, e) {
      return (t[e] = !0), t
    }, {}),
    F = (function(t) {
      function e(t) {
        a(this, e)
        var n = f(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this, t))
        ;(n.notify = function(t) {
          n.mounted && n.setState({ state: t }), (n.mounted = !0)
        }),
          (n.handleSubmit = function(t) {
            return (
              t && 'function' == typeof t.preventDefault && t.preventDefault(),
              n.form.submit()
            )
          })
        var i = t.debug,
          o = t.decorators,
          s = t.initialValues,
          u = t.mutators,
          c = t.onSubmit,
          l = t.subscription,
          p = {
            debug: i,
            initialValues: s,
            mutators: u,
            onSubmit: c,
            validate: t.validate,
            validateOnBlur: t.validateOnBlur
          }
        n.mounted = !1
        try {
          n.form = r.createForm(p)
        } catch (t) {}
        if (((n.unsubscriptions = []), n.form)) {
          var m = {}
          n.form.subscribe(function(t) {
            m = t
          }, l || y)(),
            (n.state = { state: m })
        }
        return (
          o &&
            o.forEach(function(t) {
              n.unsubscriptions.push(t(n.form))
            }),
          n
        )
      }
      return (
        c(e, t),
        s(e, [
          {
            key: 'getChildContext',
            value: function() {
              return { reactFinalForm: this.form }
            }
          },
          {
            key: 'componentWillMount',
            value: function() {
              this.form && this.form.pauseValidation()
            }
          },
          {
            key: 'componentDidMount',
            value: function() {
              this.form &&
                (this.unsubscriptions.push(
                  this.form.subscribe(this.notify, this.props.subscription || y)
                ),
                this.form.resumeValidation())
            }
          },
          {
            key: 'componentWillReceiveProps',
            value: function(t) {
              t.initialValues &&
                !(function(t, e) {
                  if (t === e) return !0
                  if (
                    'object' !== (void 0 === t ? 'undefined' : o(t)) ||
                    !t ||
                    'object' !== (void 0 === e ? 'undefined' : o(e)) ||
                    !e
                  )
                    return !1
                  var n = Object.keys(t),
                    r = Object.keys(e)
                  if (n.length !== r.length) return !1
                  for (
                    var i = Object.prototype.hasOwnProperty.bind(e), a = 0;
                    a < n.length;
                    a++
                  ) {
                    var s = n[a]
                    if (!i(s) || t[s] !== e[s]) return !1
                  }
                  return !0
                })(this.props.initialValues, t.initialValues) &&
                this.form.initialize(t.initialValues)
            }
          },
          {
            key: 'componentWillUnmount',
            value: function() {
              this.unsubscriptions.forEach(function(t) {
                return t()
              })
            }
          },
          {
            key: 'render',
            value: function() {
              var t = this.props,
                e = (t.debug,
                t.initialValues,
                t.mutators,
                t.onSubmit,
                t.subscription,
                t.validate,
                t.validateOnBlur,
                l(t, [
                  'debug',
                  'initialValues',
                  'mutators',
                  'onSubmit',
                  'subscription',
                  'validate',
                  'validateOnBlur'
                ]))
              return p(
                u({}, e, this.state ? this.state.state : {}, {
                  mutators: this.form && this.form.mutators,
                  batch: this.form && this.form.batch,
                  blur: this.form && this.form.blur,
                  change: this.form && this.form.change,
                  focus: this.form && this.form.focus,
                  handleSubmit: this.handleSubmit,
                  initialize: this.form && this.form.initialize,
                  reset: this.form && this.form.reset,
                  __versions: d
                })
              )
            }
          }
        ]),
        e
      )
    })(e.Component)
  ;(F.childContextTypes = { reactFinalForm: n.object }),
    (F.displayName = 'ReactFinalForm(' + r.version + ')(3.1.5)')
  var g = (function(t) {
    function e(t, n) {
      a(this, e)
      var r = f(
        this,
        (e.__proto__ || Object.getPrototypeOf(e)).call(this, t, n)
      )
      ;(r.subscribe = function(t, e) {
        var n = t.subscription
        r.unsubscribe = r.context.reactFinalForm.subscribe(e, n || y)
      }),
        (r.notify = function(t) {
          r.setState({ state: t }), r.props.onChange && r.props.onChange(t)
        })
      var i = void 0
      return (
        r.context.reactFinalForm &&
          r.subscribe(t, function(e) {
            i ? r.notify(e) : ((i = e), t.onChange && t.onChange(e))
          }),
        i && (r.state = { state: i }),
        r
      )
    }
    return (
      c(e, t),
      s(e, [
        {
          key: 'componentWillReceiveProps',
          value: function(t) {
            var e = t.subscription
            i(this.props.subscription, e, r.formSubscriptionItems) &&
              this.context.reactFinalForm &&
              (this.unsubscribe(), this.subscribe(t, this.notify))
          }
        },
        {
          key: 'componentWillUnmount',
          value: function() {
            this.unsubscribe()
          }
        },
        {
          key: 'render',
          value: function() {
            var t = this.props,
              e = t.onChange,
              n = (t.subscription, l(t, ['onChange', 'subscription'])),
              r = this.context.reactFinalForm
            return e
              ? null
              : p(
                  u({}, n, this.state ? this.state.state : {}, {
                    mutators: r && r.mutators,
                    batch: r && r.batch,
                    blur: r && r.blur,
                    change: r && r.change,
                    focus: r && r.focus,
                    initialize: r && r.initialize,
                    reset: r && r.reset
                  })
                )
          }
        }
      ]),
      e
    )
  })(e.Component)
  ;(g.contextTypes = { reactFinalForm: n.object }),
    (t.Field = b),
    (t.Form = F),
    (t.version = '3.1.5'),
    (t.FormSpy = g),
    Object.defineProperty(t, '__esModule', { value: !0 })
})
//# sourceMappingURL=react-final-form.umd.min.js.map
